/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define LOWER 1
#define RAISE 2
#define ADJUST 3

/ {
    // Activate ADJUST layer by pressing raise and lower

    conditional_layers { compatible = "zmk,conditional-layers"; };

    behaviors {
        space_and_layer: space_and_layer {
            compatible = "zmk,behavior-hold-tap";
            label = "SPACE_AND_LAYER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <2500>;
            quick-tap-ms = <175>;
            flavor = "balanced";
            hold-trigger-key-positions = <55>;
            hold-trigger-on-release;
            require-prior-idle-ms = <150>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp GRAVE  &kp N1  &kp N2     &kp N3    &kp N4        &kp N5                              &kp N6         &kp N7  &kp N8     &kp N9     &kp N0    &kp DEL
&kp ESC    &kp Q   &kp W      &kp E     &kp R         &kp T                               &kp Y          &kp U   &kp I      &kp O      &kp P     &kp BACKSLASH
&kp TAB    &kp A   &kp S      &kp D     &kp F         &kp G                               &kp H          &kp J   &kp K      &kp L      &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X      &kp C     &kp V         &kp B   &kp C_MUTE     &none        &kp N          &kp M   &kp COMMA  &kp DOT    &kp FSLH  &kp RSHFT
                   &kp LCTRL  &kp LALT  &kp LEFT_GUI  &mo 1   &lt 1 ENTER    &lt 2 SPACE  &kp BACKSPACE  &mo 2   &kp RALT   &kp RCTRL
            >;

            sensor-bindings =
                <&inc_dec_kp C_VOLUME_DOWN C_VOLUME_UP>,
                <&inc_dec_kp PG_UP PG_DN>;
        };

        symbolsright {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans          &trans          &trans           &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &kp MINUS       &kp UP_ARROW    &kp EQUAL        &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans          &trans          &trans           &trans  &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans          &trans          &trans
            >;
        };

        programming {
            bindings = <
&trans  &kp F1  &kp F2  &kp F3                &kp F4                 &kp F5                    &kp F6      &kp F7                       &kp F8  &kp F9                        &kp F10  &kp F11
&trans  &trans  &trans  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &trans                    &trans      &trans                       &trans  &trans                        &trans   &kp F12
&trans  &trans  &trans  &kp LEFT_BRACE        &kp RIGHT_BRACE        &trans                    &kp INSERT  &mt LC(LEFT_ALT) LEFT_ARROW  &trans  &mt LC(LEFT_ALT) RIGHT_ARROW  &trans   &trans
&trans  &trans  &trans  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &trans  &trans    &trans  &trans      &trans                       &trans  &trans                        &trans   &trans
                &trans  &trans                &trans                 &trans  &trans    &trans  &trans      &trans                       &trans  &trans
            >;
        };
    };
};
